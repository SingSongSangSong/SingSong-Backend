name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - testing_ecs

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest
          platforms: linux/amd64,linux/arm64
          build-args: |
            PINECONE_API_KEY=${{ secrets.PINECONE_API_KEY }}
            PINECONE_INDEX=${{ secrets.PINECONE_INDEX }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_NAME=${{ secrets.DB_NAME }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            REDIS_ADDR=${{ secrets.REDIS_ADDR }}
            REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
            SECRET_KEY=${{ secrets.SECRET_KEY }}
            KAKAO_REST_API_KEY=${{ secrets.KAKAO_REST_API_KEY }}
            KAKAO_ISSUER=${{ secrets.KAKAO_ISSUER }}
            JWT_ISSUER=${{ secrets.JWT_ISSUER }}
            JWT_ACCESS_VALIDITY_SECONDS=${{ secrets.JWT_ACCESS_VALIDITY_SECONDS }}
            JWT_REFRESH_VALIDITY_SECONDS=${{ secrets.JWT_REFRESH_VALIDITY_SECONDS }}