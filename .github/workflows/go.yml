name: Go

on:
  push:
    branches: ["feature/#3"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Build
        run: go build -v ./...

  docker:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:latest
          platforms: linux/amd64,linux/arm64

      - name: Docker logout
        run: docker logout

  deploy:
    runs-on: ubuntu-latest
    needs: docker

    steps:
      - uses: actions/checkout@v4

      - name: Install SSH client
        run: sudo apt-get install -y sshpass

      - name: Create .env file
        run: |
          echo "PINECONE_API_KEY=${{ secrets.PINECONE_API_KEY }}" > .env
          echo "PINECONE_INDEX=${{ secrets.PINECONE_INDEX }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

      - name: Copy .env file to Raspberry Pi
        env:
          PI_HOST: ${{ secrets.PI_HOST }}
          PI_USER: ${{ secrets.PI_USER }}
          PI_PASSWORD: ${{ secrets.PI_PASSWORD }}
        run: |
          sshpass -p $PI_PASSWORD scp -o StrictHostKeyChecking=no .env $PI_USER@$PI_HOST:/home/$PI_USER/.env
          sshpass -p $PI_PASSWORD ssh -o StrictHostKeyChecking=no $PI_USER@$PI_HOST "chmod 600 /home/$PI_USER/.env"

      - name: Connect to Raspberry Pi and run Docker commands
        env:
          PI_HOST: ${{ secrets.PI_HOST }}
          PI_USER: ${{ secrets.PI_USER }}
          PI_PASSWORD: ${{ secrets.PI_PASSWORD }}
        run: |
          sshpass -p $PI_PASSWORD ssh -o StrictHostKeyChecking=no $PI_USER@$PI_HOST << EOF
          echo "Connected to Raspberry Pi"
          if [ \$(docker ps -q -f name=${{ secrets.DOCKER_REPOSITORY }}) ]; then
            docker stop ${{ secrets.DOCKER_REPOSITORY }}
            docker rm ${{ secrets.DOCKER_REPOSITORY }}
          fi
          if [ \$(docker ps -aq -f status=exited -f name=${{ secrets.DOCKER_REPOSITORY }}) ]; then
            docker rm ${{ secrets.DOCKER_REPOSITORY }}
          fi
          docker system prune -f
          docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:latest
          docker run -d -p 8080:8080 --name ${{ secrets.DOCKER_REPOSITORY }} --env-file /home/$PI_USER/.env ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:latest
          EOF