<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="5fafdc8f-9713-4225-bab0-1ec03e3c8f40" name="Changes" comment="feat: updated swagger docs">
      <change afterPath="$PROJECT_DIR$/sqlboiler.toml.tmpl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/app/user/getUserHandler.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/app/user/getUserHandler.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///opt/homebrew/opt/go/libexec" />
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="feat/refresh-history" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;history&quot;: [
    {
      &quot;state&quot;: &quot;OPEN&quot;,
      &quot;assignee&quot;: &quot;hectick&quot;,
      &quot;author&quot;: &quot;sunwupark&quot;
    }
  ],
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;hectick&quot;,
    &quot;author&quot;: &quot;sunwupark&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/SingSongSangSong/SingSong-Backend.git&quot;,
    &quot;accountId&quot;: &quot;3ecb3d46-e1a1-43ff-a9e0-821c8bd7b66b&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2jYVtuO9dNR8vyEO1JzZ1yExM9U" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;Go Build.go build SingSong-Backend/cmd.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestListSsssTags in SingSong-Backend/internal/app/user.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestMapTagEnglishToKorean in SingSong-Backend/internal/app/user.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestMapTagKoreanToEnglish in SingSong-Backend/internal/app/user.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.go test SingSong-Backend/internal/app/user.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.go test internal.executor&quot;: &quot;Coverage&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.automatic.dependencies.download&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/sungchaeyeon/private/soma/konoment/SingSong-Backend&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/internal/app/user" />
      <recent name="$PROJECT_DIR$/internal/handler/recommendation" />
      <recent name="$PROJECT_DIR$/internal/pkg" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.go test SingSong-Backend/internal/app/user">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="SingSong-Backend" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build SingSong-Backend/cmd" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="SingSong-Backend" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="SingSong-Backend/cmd" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/cmd/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="TestListSsssTags in SingSong-Backend/internal/app/user" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="SingSong-Backend" />
      <working_directory value="$PROJECT_DIR$/internal/app/user" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="SingSong-Backend/internal/app/user" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestListSsssTags\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestMapTagEnglishToKorean in SingSong-Backend/internal/app/user" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="SingSong-Backend" />
      <working_directory value="$PROJECT_DIR$/internal/app/user" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="SingSong-Backend/internal/app/user" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestMapTagEnglishToKorean\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestMapTagKoreanToEnglish in SingSong-Backend/internal/app/user" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="SingSong-Backend" />
      <working_directory value="$PROJECT_DIR$/internal/app/user" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="SingSong-Backend/internal/app/user" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestMapTagKoreanToEnglish\E$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="SingSong-Backend" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="go test SingSong-Backend/internal/app/user" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="SingSong-Backend" />
      <working_directory value="$PROJECT_DIR$/internal/app/user" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="SingSong-Backend/internal/app/user" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestMapTagKoreanToEnglish in SingSong-Backend/internal/app/user" />
        <item itemvalue="Go Test.TestMapTagEnglishToKorean in SingSong-Backend/internal/app/user" />
        <item itemvalue="Go Test.TestListSsssTags in SingSong-Backend/internal/app/user" />
        <item itemvalue="Go Test.go test SingSong-Backend/internal/app/user" />
        <item itemvalue="Go Build.go build SingSong-Backend/cmd" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-33c477a475b1-e0158606a674-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-241.18034.61" />
        <option value="bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-GO-241.18034.61" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Refactor: rename package name" />
    <MESSAGE value="Remove: remove .idea" />
    <MESSAGE value="Feat: create base response" />
    <MESSAGE value="Feat: change request, response format of recommend by song number api" />
    <MESSAGE value="Feat: change request, response format of home recommendation api" />
    <MESSAGE value="Feat: create get ssss tags api" />
    <MESSAGE value="Feat: apply korean tags" />
    <MESSAGE value="Refactor: add error message" />
    <MESSAGE value="Fix: fix exit situation when wrong request comes" />
    <MESSAGE value="Feat: response empty list instead of null" />
    <MESSAGE value="Feat: change english tags" />
    <MESSAGE value="Feat: update pinecone ssss format" />
    <MESSAGE value="Feat: filtered MR false" />
    <MESSAGE value="test: test tag-related functions" />
    <MESSAGE value="fix: fixed expiration time" />
    <MESSAGE value="refactor: refactored handler" />
    <MESSAGE value="feat: updated swagger docs" />
    <option name="LAST_COMMIT_MESSAGE" value="feat: updated swagger docs" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/SingSong_Backend$go_test_internal.out" NAME="go test internal Coverage Results" MODIFIED="1721713675383" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>