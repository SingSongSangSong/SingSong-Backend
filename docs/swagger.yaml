basePath: /api/v1
definitions:
  handler.LoginRequest:
    properties:
      IdToken:
        type: string
      Provider:
        type: string
    type: object
  handler.LoginResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  handler.PlaylistAddRequest:
    properties:
      songNumbers:
        items:
          type: integer
        type: array
    type: object
  handler.PlaylistAddResponse:
    properties:
      singerName:
        type: string
      songId:
        type: integer
      songName:
        type: string
      songNumber:
        type: integer
    type: object
  handler.ReissueRequest:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  handler.SongDeleteFromPlaylistRequest:
    properties:
      songNumbers:
        items:
          type: integer
        type: array
    type: object
  handler.homeRequest:
    properties:
      tags:
        items:
          type: string
        type: array
    type: object
  handler.homeResponse:
    properties:
      songs:
        items:
          $ref: '#/definitions/handler.songHomeResponse'
        type: array
      tag:
        type: string
    type: object
  handler.refreshRequest:
    properties:
      tag:
        type: string
    type: object
  handler.refreshResponse:
    properties:
      isKeep:
        type: boolean
      singerName:
        type: string
      songId:
        type: integer
      songName:
        type: string
      songNumber:
        type: integer
      tags:
        items:
          type: string
        type: array
    type: object
  handler.songHomeResponse:
    properties:
      singerName:
        type: string
      songId:
        type: integer
      songName:
        type: string
      songNumber:
        type: integer
      tags:
        items:
          type: string
        type: array
    type: object
  handler.songRecommendRequest:
    properties:
      songNumbers:
        items:
          type: integer
        type: array
    type: object
  handler.songRecommendResponse:
    properties:
      singerName:
        type: string
      songName:
        type: string
      songNumber:
        type: integer
      tags:
        items:
          type: string
        type: array
    type: object
  pkg.BaseResponseStruct:
    properties:
      data: {}
      message:
        type: string
    type: object
info:
  contact: {}
  title: 싱송생송 API
  version: "1.0"
paths:
  /keep:
    delete:
      consumes:
      - application/json
      description: 노래들을 하나씩 플레이리스트에서 삭제한다
      parameters:
      - description: 노래 리스트
        in: body
        name: SongDeleteFromPlaylistRequest
        required: true
        schema:
          $ref: '#/definitions/handler.SongDeleteFromPlaylistRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 성공
          schema:
            allOf:
            - $ref: '#/definitions/pkg.BaseResponseStruct'
            - properties:
                data:
                  $ref: '#/definitions/handler.PlaylistAddResponse'
              type: object
      security:
      - BearerAuth: []
      summary: 플레이리스트에 노래를 제거한다
      tags:
      - Playlist
    get:
      consumes:
      - application/json
      description: 플레이리스트에 있는 노래들을 가져온다
      produces:
      - application/json
      responses:
        "200":
          description: 성공
          schema:
            allOf:
            - $ref: '#/definitions/pkg.BaseResponseStruct'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/handler.PlaylistAddResponse'
                  type: array
              type: object
      security:
      - BearerAuth: []
      summary: 플레이리스트에 노래를 가져온다
      tags:
      - Playlist
    post:
      consumes:
      - application/json
      description: 노래들을 하나씩 플레이리스트에 추가한 후 적용된 플레이리스트의 노래들을 리턴한다
      parameters:
      - description: 노래 리스트
        in: body
        name: PlaylistAddRequest
        required: true
        schema:
          $ref: '#/definitions/handler.PlaylistAddRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 성공
          schema:
            allOf:
            - $ref: '#/definitions/pkg.BaseResponseStruct'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/handler.PlaylistAddResponse'
                  type: array
              type: object
      security:
      - BearerAuth: []
      summary: 플레이리스트에 노래를 추가한다
      tags:
      - Playlist
  /recommend/home:
    post:
      consumes:
      - application/json
      description: 태그에 해당하는 노래를 추천합니다.
      parameters:
      - description: 태그 목록
        in: body
        name: songs
        required: true
        schema:
          $ref: '#/definitions/handler.homeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 성공
          schema:
            allOf:
            - $ref: '#/definitions/pkg.BaseResponseStruct'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/handler.homeResponse'
                  type: array
              type: object
      summary: 노래 추천 by 태그
      tags:
      - Recommendation
  /recommend/refresh:
    post:
      consumes:
      - application/json
      description: 태그에 해당하는 노래를 새로고침합니다.
      parameters:
      - description: 태그
        in: body
        name: songs
        required: true
        schema:
          $ref: '#/definitions/handler.refreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 성공
          schema:
            allOf:
            - $ref: '#/definitions/pkg.BaseResponseStruct'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/handler.refreshResponse'
                  type: array
              type: object
      security:
      - BearerAuth: []
      summary: 새로고침 노래 추천
      tags:
      - Recommendation
  /recommend/songs:
    post:
      consumes:
      - application/json
      description: 노래 번호 목록을 보내면 유사한 노래들을 추천합니다.
      parameters:
      - description: 노래 번호 목록
        in: body
        name: songs
        required: true
        schema:
          $ref: '#/definitions/handler.songRecommendRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 성공
          schema:
            allOf:
            - $ref: '#/definitions/pkg.BaseResponseStruct'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/handler.songRecommendResponse'
                  type: array
              type: object
      summary: 노래 추천 by 노래 번호 목록
      tags:
      - Recommendation
  /tags:
    get:
      consumes:
      - application/json
      description: ssss 태그 목록을 조회합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg.BaseResponseStruct'
      summary: ssss 태그 목록 가져오기
      tags:
      - Tags
  /user/login:
    post:
      consumes:
      - application/json
      description: IdToken을 이용한 회원가입 및 로그인
      parameters:
      - description: idToken 및 Provider
        in: body
        name: songs
        required: true
        schema:
          $ref: '#/definitions/handler.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 성공
          schema:
            allOf:
            - $ref: '#/definitions/pkg.BaseResponseStruct'
            - properties:
                data:
                  $ref: '#/definitions/handler.LoginResponse'
              type: object
      summary: 회원가입 및 로그인
      tags:
      - Signup and Login
  /user/reissue:
    post:
      consumes:
      - application/json
      description: AccessToken 재발급 및 RefreshToken 재발급 (RTR Refresh Token Rotation)
      parameters:
      - description: accessToken 및 refreshToken
        in: body
        name: songs
        required: true
        schema:
          $ref: '#/definitions/handler.ReissueRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 성공
          schema:
            allOf:
            - $ref: '#/definitions/pkg.BaseResponseStruct'
            - properties:
                data:
                  $ref: '#/definitions/handler.LoginResponse'
              type: object
      summary: AccessToken RefreshToken 재발급
      tags:
      - Reissue
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
